# -*- coding: utf-8 -*-
# vim: ft=jinja

{%- set tplroot = tpldir.split('/')[0] %}
{%- import_yaml tplroot ~ "/defaults.yaml" as default_settings %}
{%- import_yaml tplroot ~ "/osfingermap.yaml" as osfingermap %}
{%- import_yaml tplroot ~ "/osarchmap.yaml" as osarchmap %}
{%- import_yaml tplroot ~ "/osfamilymap.yaml" as osfamilymap %}
{%- set _config = salt['config.get'](tplroot, default={}) %}

{%- set defaults = salt['grains.filter_by'](
      default_settings,
      default=tplroot,
      merge=salt['grains.filter_by']( osfamilymap, grain='os_family',
        merge=salt['grains.filter_by']( osarchmap, grain='osarch',
          merge=salt['grains.filter_by']( osfingermap, grain='osfinger',
            merge=salt['grains.filter_by']( _config, default='lookup'
            )
          )
        )
      )
    )
 %}

{%- set m = salt['grains.filter_by']( {'defaults': defaults}, default='defaults', merge=_config) %}

{# ## components ## #}
{%- if 'component' in m.pkg and m.pkg.component is mapping %}
    {%- for name,v in m.pkg.component.items() %}
        {%- set url = None %}
        {%- set dir = name %}
        {%- set release = v.version.split('.')[0] ~ '.' ~ v.version.split('.')[1] %}

        {# ARCHIVE #}
        {%- if 'version' in v and v.version and 'archive' in v and v.archive %}
            {%- set dir = '%s-%s'|format(name, v.version) %}
            {%- if 'source' in v.archive %}
                {%- set uri = v.archive.source|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set url = uri|replace('REL', release) %}
                {%- do m.pkg.component[name]['archive'].update({'name': m.dir.archive ~ '/' ~ dir, 'source': url}) %}
            {%- endif %}
            {%- if 'source_hash' in v.archive %}
                {%- set hashy = v.archive.source_hash|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set hash = hashy|replace('REL', release) %}
                {%- do m.pkg.component[name]['archive'].update({'source_hash': hash}) %}
            {%- endif %}
            {%- do m.pkg.component[name].update({'path': m.dir.archive ~ '/' ~ dir }) %}
        {%- endif %}

        {# MACAPP #}
        {%- if 'version' in v and v.version and 'macapp' in v and v.macapp %}
            {%- set dir = '%s-%s'|format(name, v.version) %}
            {%- if 'source' in v.macapp %}
                {%- set uri = v.macapp.source|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set url = uri|replace('REL', release) %}
                {%- do m.pkg.component[name]['macapp'].update({'name': m.dir.macapp, 'source': url}) %}
            {%- endif %}
            {%- if 'source_hash' in v.macapp %}
                {%- set hashy = v.macapp.source_hash|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set hash = hashy|replace('REL', release) %}
                {%- do m.pkg.component[name]['macapp'].update({'source_hash': hash}) %}
            {%- endif %}
            {%- do m.pkg.component[name].update({'path': m.dir.macapp }) %}
        {%- endif %}
    {%- endfor %}

    {# REPO #}
    {%- if 'repo' in m.pkg and 'file' in m.pkg.repo %}
        {%- do m.pkg.repo.update({'file': m.pkg.repo.file|replace('REL', m.pkg.component.mongod.version)}) %}
    {%- endif %}
    {%- if 'repo' in m.pkg and 'name' in m.pkg.repo %}
            {%- do m.pkg.repo.update({'name': m.pkg.repo.name|replace('REL', m.pkg.component.mongod.version)}) %}
    {%- endif %}
    {%- if 'repo' in m.pkg and 'humanname' in m.pkg.repo %}
        {%- do m.pkg.repo.update({'humanname': m.pkg.repo.humanname|replace('REL', m.pkg.component.mongod.version)}) %}
    {%- endif %}
    {%- if 'repo' in m.pkg and 'gpgkey' in m.pkg.repo %}
        {%- do m.pkg.repo.update({'gpgkey': m.pkg.repo.gpgkey|replace('REL', m.pkg.component.mongod.version)}) %}
    {%- endif %}
{%- endif %}

{# ## gui ## #}
{%- if 'gui' in m.pkg and m.pkg.gui is mapping %}
    {%- for name,v in m.pkg.gui.items() %}
        {%- set url = None %}
        {%- set dir = name %}
        {%- set release = v.version.split('.')[0] ~ '.' ~ v.version.split('.')[1] %}

            {# ARCHIVE #}
        {%- if 'version' in v and v.version and 'archive' in v and v.archive %}
            {%- set dir = '%s-%s'|format(name, v.version) %}
            {%- if 'source' in v.archive %}
                {%- set uri = v.archive.source|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set url = uri|replace('REL', release) %}
                {%- do m.pkg.gui[name]['archive'].update({'name': m.dir.archive ~ '/' ~ dir, 'source': url}) %}
            {%- endif %}
            {%- if 'source_hash' in v.archive %}
                {%- set hashy = v.archive.source_hash|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set hash = hashy|replace('REL', release) %}
                {%- do m.pkg.gui[name]['archive'].update({'source_hash': hash}) %}
            {%- endif %}
            {%- do m.pkg.gui[name].update({'path': m.dir.archive ~ '/' ~ dir }) %}
        {%- endif %}

            {# MACAPP #}
        {%- if 'version' in v and v.version and 'macapp' in v and v.macapp %}
            {%- set dir = '%s-%s'|format(name, v.version) %}
            {%- if 'source' in v.macapp %}
                {%- set uri = v.macapp.source|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set url = uri|replace('REL', release) %}
                {%- do m.pkg.gui[name]['macapp'].update({'name': m.dir.macapp ~ '/' ~ dir, 'source': url}) %}
            {%- endif %}
            {%- if 'source_hash' in v.macapp %}
                {%- set hashy = v.macapp.source_hash|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set hash = hashy|replace('REL', release) %}
                {%- do m.pkg.gui[name]['macapp'].update({'source_hash': hash}) %}
            {%- endif %}
            {%- do m.pkg.gui[name].update({'path': m.dir.macapp ~ '/' ~ dir }) %}
        {%- endif %}
    {%- endfor %}
{%- endif %}

{# ## connector ## #}
{%- if 'connectors' in m.pkg and m.pkg.connectors is mapping %}
    {%- for name,v in m.pkg.connectors.items() %}
        {%- set url = None %}
        {%- set dir = name %}
        {%- set release = v.version.split('.')[0] ~ '.' ~ v.version.split('.')[1] %}

            {# ARCHIVE #}
        {%- if 'version' in v and v.version and 'archive' in v and v.archive %}
            {%- set dir = '%s-%s'|format(name, v.version) %}
            {%- if 'source' in v.archive %}
                {%- set uri = v.archive.source|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set url = uri|replace('REL', release) %}
                {%- do m.pkg.connectors[name]['archive'].update({'name': m.dir.archive ~ '/' ~ dir, 'source': url}) %}
            {%- endif %}
            {%- if 'source_hash' in v.archive %}
                {%- set hashy = v.archive.source_hash|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set hash = hashy|replace('REL', release) %}
                {%- do m.pkg.connectors[name]['archive'].update({'source_hash': hash}) %}
            {%- endif %}
            {%- do m.pkg.connectors[name].update({'path': m.dir.archive ~ '/' ~ dir }) %}
        {%- endif %}

            {# MACAPP #}
        {%- if 'version' in v and v.version and 'macapp' in v and v.macapp %}
            {%- set dir = '%s-%s'|format(name, v.version) %}
            {%- if 'source' in v.macapp %}
                {%- set uri = v.macapp.source|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set url = uri|replace('REL', release) %}
                {%- do m.pkg.connectors[name]['macapp'].update({'name': m.dir.macapp ~ '/' ~ dir, 'source': url}) %}
            {%- endif %}
            {%- if 'source_hash' in v.macapp %}
                {%- set hashy = v.macapp.source_hash|replace('VER', v.version)|replace('ARCH', m.arch) %}
                {%- set hash = hashy|replace('REL', release) %}
                {%- do m.pkg.connectors[name]['macapp'].update({'source_hash': hash}) %}
            {%- endif %}
            {%- do m.pkg.connectors[name].update({'path': m.dir.macapp ~ '/' ~ dir }) %}
        {%- endif %}
    {%- endfor %}
{%- endif %}

{%- set mongodb = m %}
