# -*- coding: utf-8 -*-
# vim: ft=jinja

{%- set tplroot = tpldir.split('/')[0] %}
{%- import_yaml tplroot ~ "/defaults.yaml" as default_settings %}
{%- import_yaml tplroot ~ "/osfingermap.yaml" as osfingermap %}
{%- import_yaml tplroot ~ "/osarchmap.yaml" as osarchmap %}
{%- import_yaml tplroot ~ "/osfamilymap.yaml" as osfamilymap %}
{%- set _config = salt['config.get'](tplroot, default={}) %}

{%- set defaults = salt['grains.filter_by'](
      default_settings,
      default=tplroot,
      merge=salt['grains.filter_by']( osfamilymap, grain='os_family',
        merge=salt['grains.filter_by']( osarchmap, grain='osarch',
          merge=salt['grains.filter_by']( osfingermap, grain='osfinger',
            merge=salt['grains.filter_by']( _config, default='lookup'
            )
          )
        )
      )
    )
 %}

{%- set d = salt['grains.filter_by']( {'defaults': defaults}, default='defaults', merge=_config) %}

{%- for comp in d.software_component_matrix %}
    {# COMPONENTS #}
    {%- if comp in d.pkg and d.pkg[comp] is mapping %}
        {# COMPONENT #}
        {%- for name,v in d.pkg[comp].items() %}
            {# WANTED #}
            {%- set software = d.pkg[comp][name] %}
            {%- set url = None %}
            {%- set dir = name %}
            {%- set release = v.version.split('.')[0] ~ '.' ~ v.version.split('.')[1] %}

            {%- for package in d.software_package_matrix %}
                {# PACKAGES #}

                {%- if 'version' in v and v.version and package in v and v[package] %}
                    {# VERSIONED DOWNLOAD #}
                    {%- set dir = '%s-%s'|format(name, v.version) %}
                    {%- do software[package].update({'name': d.dir[package] ~'/'~ dir}) %}

                    {%- if 'source' in v[package] %}
                        {# URL #}
                        {%- set u = v[package]['source']|replace('VER', v.version)|replace('ARCH', d.arch) %}
                        {%- set url = u|replace('REL', release) %}
                        {%- do software[package].update({'source': url}) %}
                    {%- endif %}

                    {%- if 'source_hash' in v[package] %}
                        {# HASH #}
                        {%- set h = v[package]['source_hash']|replace('VER', v.version)|replace('ARCH', d.arch) %}
                        {%- set hash = h|replace('REL', release) %}
                        {%- do software[package].update({'source_hash': hash}) %}
                    {%- endif %}

                    {%- set fullpath = d.dir[package] ~ '/' ~ dir %}
                    {%- do software.update({'path': d.dir[package] if name == 'macapp' else fullpath }) %}
                {%- endif %}
            {%- endfor %}
        {%- endfor %}
    {%- endif %}
{%- endfor %}

### MONGODB FORMULA ###
{%- do d.update({'formula': 'mongodb'}) %}

{%- if 'repo' in d.pkg and 'mongod' in d.pkg.database %}
    {# PKGREPO #}
    {%- for fname in ('file', 'name', 'humanname', 'gpgkey',) %}
        {%- if fname in d.pkg.repo %}
            {%- do d.pkg.repo.update({fname: d.pkg.repo[fname]|replace('REL', d.pkg.database.mongod.version)}) %}
        {%- endif %}
    {%- endfor %}
{%- endif %}

## keep me
{%- set data = d %}
